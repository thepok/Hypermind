@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace GeneralAdvicer.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="GeneralAdvicer.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        var synth = window.speechSynthesis;
        var voices = [];
        var voice;

        function populateVoiceList(language) {
            voices = synth.getVoices();
            voice = voices[0];
            for (i = 0; i < voices.length; i++) {
                console.log(voices[i].name + ' lang:' + voices[i].lang);
                //document.write(voices[i].name + ' lang:' + voices[i].lang)
                if (voices[i].lang.startsWith(language.trim())) {
                    voice = voices[i];
                    break;
                }
            }
        }

        populateVoiceList();
        if (speechSynthesis.onvoiceschanged !== undefined) {
            speechSynthesis.onvoiceschanged = populateVoiceList;
        }

        function speak(mytext, language) {
            populateVoiceList(language)
            var utterThis = new SpeechSynthesisUtterance(mytext);
            utterThis.voice = voice;
            utterThis.rate = 1.1;
            utterThis.lang = utterThis.voice.lang
            synth.speak(utterThis);
        }
    </script>
</body>
</html>
