@page "/advicer"
@page "/"
@using HypermindLib
@using System.Text;
@inject IJSRuntime JsRuntime

<PageTitle>General Advicer</PageTitle>

<p align="center">
    <b>
        <font size="6">G</font><font size="4">ENERAL </font><font size="6">T</font><font size="4">EATCHER </font>
    </b>
</p>

@foreach (var message in advicer.messages)
{
    <p>@message.sender: @((MarkupString)message.text)</p>
}
<br />
<p title="@lastPromp">Status: @status</p>
<form @onsubmit="GetAdvice">
<InputText @bind-Value="nextMessage"></InputText>
<button class="btn btn-primary">Send</button>
</form>

@code {
    
    private Teacher advicer = new Teacher();
    
    

    
    private string status = "";

    private string nextMessage = "";

    public string lastPromp = "not yet set";
    


    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await createAnswer();
            base.OnAfterRender(firstRender);
        }
    }

    private async Task  createAnswer()
    {
        await Task.Run(() =>
        {
            this.status = "Loading answer";
            this.InvokeAsync(() => this.StateHasChanged());
            var answer = advicer.GetRespons();
            Speak(answer);
            status = "Waiting for User";
            this.InvokeAsync(() => this.StateHasChanged());
        });
    }

    private async void GetAdvice()
    {
        //add text from website als new message
        this.advicer.AddMessage(advicer.UserName, nextMessage);

        nextMessage = "";

        //let chatgpt create new message
        await createAnswer();

    }

    private void Speak(string text)
    {
        //if (BBB.UseVoiceSystem == false)
        //    return;
        JsRuntime.InvokeAsync<object>("speak", text);
    }
}